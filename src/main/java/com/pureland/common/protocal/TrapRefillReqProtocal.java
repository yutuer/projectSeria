// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: TrapRefillReq.proto

package com.pureland.common.protocal;

public final class TrapRefillReqProtocal {
  private TrapRefillReqProtocal() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface TrapRefillReqOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required .TrapRefillReq.RefillType refillType = 1;
    /**
     * <code>required .TrapRefillReq.RefillType refillType = 1;</code>
     */
    boolean hasRefillType();
    /**
     * <code>required .TrapRefillReq.RefillType refillType = 1;</code>
     */
    com.pureland.common.protocal.TrapRefillReqProtocal.TrapRefillReq.RefillType getRefillType();

    // optional int64 sid = 2;
    /**
     * <code>optional int64 sid = 2;</code>
     *
     * <pre>
     *refillType为single时trap建筑的服务器id
     * </pre>
     */
    boolean hasSid();
    /**
     * <code>optional int64 sid = 2;</code>
     *
     * <pre>
     *refillType为single时trap建筑的服务器id
     * </pre>
     */
    long getSid();
  }
  /**
   * Protobuf type {@code TrapRefillReq}
   *
   * <pre>
   *重置陷阱建筑
   * </pre>
   */
  public static final class TrapRefillReq extends
      com.google.protobuf.GeneratedMessage
      implements TrapRefillReqOrBuilder {
    // Use TrapRefillReq.newBuilder() to construct.
    private TrapRefillReq(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private TrapRefillReq(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final TrapRefillReq defaultInstance;
    public static TrapRefillReq getDefaultInstance() {
      return defaultInstance;
    }

    public TrapRefillReq getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private TrapRefillReq(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              com.pureland.common.protocal.TrapRefillReqProtocal.TrapRefillReq.RefillType value = com.pureland.common.protocal.TrapRefillReqProtocal.TrapRefillReq.RefillType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                refillType_ = value;
              }
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              sid_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.pureland.common.protocal.TrapRefillReqProtocal.internal_static_TrapRefillReq_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.pureland.common.protocal.TrapRefillReqProtocal.internal_static_TrapRefillReq_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.pureland.common.protocal.TrapRefillReqProtocal.TrapRefillReq.class, com.pureland.common.protocal.TrapRefillReqProtocal.TrapRefillReq.Builder.class);
    }

    public static com.google.protobuf.Parser<TrapRefillReq> PARSER =
        new com.google.protobuf.AbstractParser<TrapRefillReq>() {
      public TrapRefillReq parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TrapRefillReq(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<TrapRefillReq> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code TrapRefillReq.RefillType}
     */
    public enum RefillType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>Single = 1;</code>
       */
      Single(0, 1),
      /**
       * <code>All = 2;</code>
       */
      All(1, 2),
      ;

      /**
       * <code>Single = 1;</code>
       */
      public static final int Single_VALUE = 1;
      /**
       * <code>All = 2;</code>
       */
      public static final int All_VALUE = 2;


      public final int getNumber() { return value; }

      public static RefillType valueOf(int value) {
        switch (value) {
          case 1: return Single;
          case 2: return All;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<RefillType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<RefillType>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<RefillType>() {
              public RefillType findValueByNumber(int number) {
                return RefillType.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.pureland.common.protocal.TrapRefillReqProtocal.TrapRefillReq.getDescriptor().getEnumTypes().get(0);
      }

      private static final RefillType[] VALUES = values();

      public static RefillType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private RefillType(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:TrapRefillReq.RefillType)
    }

    private int bitField0_;
    // required .TrapRefillReq.RefillType refillType = 1;
    public static final int REFILLTYPE_FIELD_NUMBER = 1;
    private com.pureland.common.protocal.TrapRefillReqProtocal.TrapRefillReq.RefillType refillType_;
    /**
     * <code>required .TrapRefillReq.RefillType refillType = 1;</code>
     */
    public boolean hasRefillType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .TrapRefillReq.RefillType refillType = 1;</code>
     */
    public com.pureland.common.protocal.TrapRefillReqProtocal.TrapRefillReq.RefillType getRefillType() {
      return refillType_;
    }

    // optional int64 sid = 2;
    public static final int SID_FIELD_NUMBER = 2;
    private long sid_;
    /**
     * <code>optional int64 sid = 2;</code>
     *
     * <pre>
     *refillType为single时trap建筑的服务器id
     * </pre>
     */
    public boolean hasSid() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int64 sid = 2;</code>
     *
     * <pre>
     *refillType为single时trap建筑的服务器id
     * </pre>
     */
    public long getSid() {
      return sid_;
    }

    private void initFields() {
      refillType_ = com.pureland.common.protocal.TrapRefillReqProtocal.TrapRefillReq.RefillType.Single;
      sid_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasRefillType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, refillType_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, sid_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, refillType_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, sid_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.pureland.common.protocal.TrapRefillReqProtocal.TrapRefillReq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.pureland.common.protocal.TrapRefillReqProtocal.TrapRefillReq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.pureland.common.protocal.TrapRefillReqProtocal.TrapRefillReq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.pureland.common.protocal.TrapRefillReqProtocal.TrapRefillReq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.pureland.common.protocal.TrapRefillReqProtocal.TrapRefillReq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.pureland.common.protocal.TrapRefillReqProtocal.TrapRefillReq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.pureland.common.protocal.TrapRefillReqProtocal.TrapRefillReq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.pureland.common.protocal.TrapRefillReqProtocal.TrapRefillReq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.pureland.common.protocal.TrapRefillReqProtocal.TrapRefillReq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.pureland.common.protocal.TrapRefillReqProtocal.TrapRefillReq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.pureland.common.protocal.TrapRefillReqProtocal.TrapRefillReq prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code TrapRefillReq}
     *
     * <pre>
     *重置陷阱建筑
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.pureland.common.protocal.TrapRefillReqProtocal.TrapRefillReqOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.pureland.common.protocal.TrapRefillReqProtocal.internal_static_TrapRefillReq_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.pureland.common.protocal.TrapRefillReqProtocal.internal_static_TrapRefillReq_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.pureland.common.protocal.TrapRefillReqProtocal.TrapRefillReq.class, com.pureland.common.protocal.TrapRefillReqProtocal.TrapRefillReq.Builder.class);
      }

      // Construct using com.pureland.common.protocal.TrapRefillReqProtocal.TrapRefillReq.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        refillType_ = com.pureland.common.protocal.TrapRefillReqProtocal.TrapRefillReq.RefillType.Single;
        bitField0_ = (bitField0_ & ~0x00000001);
        sid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.pureland.common.protocal.TrapRefillReqProtocal.internal_static_TrapRefillReq_descriptor;
      }

      public com.pureland.common.protocal.TrapRefillReqProtocal.TrapRefillReq getDefaultInstanceForType() {
        return com.pureland.common.protocal.TrapRefillReqProtocal.TrapRefillReq.getDefaultInstance();
      }

      public com.pureland.common.protocal.TrapRefillReqProtocal.TrapRefillReq build() {
        com.pureland.common.protocal.TrapRefillReqProtocal.TrapRefillReq result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.pureland.common.protocal.TrapRefillReqProtocal.TrapRefillReq buildPartial() {
        com.pureland.common.protocal.TrapRefillReqProtocal.TrapRefillReq result = new com.pureland.common.protocal.TrapRefillReqProtocal.TrapRefillReq(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.refillType_ = refillType_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.sid_ = sid_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.pureland.common.protocal.TrapRefillReqProtocal.TrapRefillReq) {
          return mergeFrom((com.pureland.common.protocal.TrapRefillReqProtocal.TrapRefillReq)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.pureland.common.protocal.TrapRefillReqProtocal.TrapRefillReq other) {
        if (other == com.pureland.common.protocal.TrapRefillReqProtocal.TrapRefillReq.getDefaultInstance()) return this;
        if (other.hasRefillType()) {
          setRefillType(other.getRefillType());
        }
        if (other.hasSid()) {
          setSid(other.getSid());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasRefillType()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.pureland.common.protocal.TrapRefillReqProtocal.TrapRefillReq parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.pureland.common.protocal.TrapRefillReqProtocal.TrapRefillReq) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required .TrapRefillReq.RefillType refillType = 1;
      private com.pureland.common.protocal.TrapRefillReqProtocal.TrapRefillReq.RefillType refillType_ = com.pureland.common.protocal.TrapRefillReqProtocal.TrapRefillReq.RefillType.Single;
      /**
       * <code>required .TrapRefillReq.RefillType refillType = 1;</code>
       */
      public boolean hasRefillType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .TrapRefillReq.RefillType refillType = 1;</code>
       */
      public com.pureland.common.protocal.TrapRefillReqProtocal.TrapRefillReq.RefillType getRefillType() {
        return refillType_;
      }
      /**
       * <code>required .TrapRefillReq.RefillType refillType = 1;</code>
       */
      public Builder setRefillType(com.pureland.common.protocal.TrapRefillReqProtocal.TrapRefillReq.RefillType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        refillType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .TrapRefillReq.RefillType refillType = 1;</code>
       */
      public Builder clearRefillType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        refillType_ = com.pureland.common.protocal.TrapRefillReqProtocal.TrapRefillReq.RefillType.Single;
        onChanged();
        return this;
      }

      // optional int64 sid = 2;
      private long sid_ ;
      /**
       * <code>optional int64 sid = 2;</code>
       *
       * <pre>
       *refillType为single时trap建筑的服务器id
       * </pre>
       */
      public boolean hasSid() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int64 sid = 2;</code>
       *
       * <pre>
       *refillType为single时trap建筑的服务器id
       * </pre>
       */
      public long getSid() {
        return sid_;
      }
      /**
       * <code>optional int64 sid = 2;</code>
       *
       * <pre>
       *refillType为single时trap建筑的服务器id
       * </pre>
       */
      public Builder setSid(long value) {
        bitField0_ |= 0x00000002;
        sid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 sid = 2;</code>
       *
       * <pre>
       *refillType为single时trap建筑的服务器id
       * </pre>
       */
      public Builder clearSid() {
        bitField0_ = (bitField0_ & ~0x00000002);
        sid_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:TrapRefillReq)
    }

    static {
      defaultInstance = new TrapRefillReq(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:TrapRefillReq)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_TrapRefillReq_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_TrapRefillReq_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\023TrapRefillReq.proto\"n\n\rTrapRefillReq\022-" +
      "\n\nrefillType\030\001 \002(\0162\031.TrapRefillReq.Refil" +
      "lType\022\013\n\003sid\030\002 \001(\003\"!\n\nRefillType\022\n\n\006Sing" +
      "le\020\001\022\007\n\003All\020\002B5\n\034com.pureland.common.pro" +
      "tocalB\025TrapRefillReqProtocal"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_TrapRefillReq_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_TrapRefillReq_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_TrapRefillReq_descriptor,
              new java.lang.String[] { "RefillType", "Sid", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
