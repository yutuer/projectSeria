// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ProductionReq.proto

package com.pureland.common.protocal;

public final class ProductionReqProtocal {
  private ProductionReqProtocal() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface ProductionReqOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required .ProductionReq.ProductionRequestType productionRequestType = 1;
    /**
     * <code>required .ProductionReq.ProductionRequestType productionRequestType = 1;</code>
     *
     * <pre>
     *生产请求类型
     * </pre>
     */
    boolean hasProductionRequestType();
    /**
     * <code>required .ProductionReq.ProductionRequestType productionRequestType = 1;</code>
     *
     * <pre>
     *生产请求类型
     * </pre>
     */
    com.pureland.common.protocal.ProductionReqProtocal.ProductionReq.ProductionRequestType getProductionRequestType();

    // required int64 sid = 2;
    /**
     * <code>required int64 sid = 2;</code>
     *
     * <pre>
     *生产的建筑id
     * </pre>
     */
    boolean hasSid();
    /**
     * <code>required int64 sid = 2;</code>
     *
     * <pre>
     *生产的建筑id
     * </pre>
     */
    long getSid();

    // optional .ProductionItemVO productionItemVO = 3;
    /**
     * <code>optional .ProductionItemVO productionItemVO = 3;</code>
     *
     * <pre>
     *生产的物品
     * </pre>
     */
    boolean hasProductionItemVO();
    /**
     * <code>optional .ProductionItemVO productionItemVO = 3;</code>
     *
     * <pre>
     *生产的物品
     * </pre>
     */
    com.pureland.common.protocal.vo.ProductionItemVOProtocal.ProductionItemVO getProductionItemVO();
    /**
     * <code>optional .ProductionItemVO productionItemVO = 3;</code>
     *
     * <pre>
     *生产的物品
     * </pre>
     */
    com.pureland.common.protocal.vo.ProductionItemVOProtocal.ProductionItemVOOrBuilder getProductionItemVOOrBuilder();

    // required int64 time = 4;
    /**
     * <code>required int64 time = 4;</code>
     *
     * <pre>
     *当前的时间
     * </pre>
     */
    boolean hasTime();
    /**
     * <code>required int64 time = 4;</code>
     *
     * <pre>
     *当前的时间
     * </pre>
     */
    long getTime();

    // optional int32 diamondCount = 5;
    /**
     * <code>optional int32 diamondCount = 5;</code>
     *
     * <pre>
     *立即完成使用的钻石数量
     * </pre>
     */
    boolean hasDiamondCount();
    /**
     * <code>optional int32 diamondCount = 5;</code>
     *
     * <pre>
     *立即完成使用的钻石数量
     * </pre>
     */
    int getDiamondCount();
  }
  /**
   * Protobuf type {@code ProductionReq}
   */
  public static final class ProductionReq extends
      com.google.protobuf.GeneratedMessage
      implements ProductionReqOrBuilder {
    // Use ProductionReq.newBuilder() to construct.
    private ProductionReq(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ProductionReq(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ProductionReq defaultInstance;
    public static ProductionReq getDefaultInstance() {
      return defaultInstance;
    }

    public ProductionReq getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ProductionReq(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              com.pureland.common.protocal.ProductionReqProtocal.ProductionReq.ProductionRequestType value = com.pureland.common.protocal.ProductionReqProtocal.ProductionReq.ProductionRequestType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                productionRequestType_ = value;
              }
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              sid_ = input.readInt64();
              break;
            }
            case 26: {
              com.pureland.common.protocal.vo.ProductionItemVOProtocal.ProductionItemVO.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = productionItemVO_.toBuilder();
              }
              productionItemVO_ = input.readMessage(com.pureland.common.protocal.vo.ProductionItemVOProtocal.ProductionItemVO.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(productionItemVO_);
                productionItemVO_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              time_ = input.readInt64();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              diamondCount_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.pureland.common.protocal.ProductionReqProtocal.internal_static_ProductionReq_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.pureland.common.protocal.ProductionReqProtocal.internal_static_ProductionReq_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.pureland.common.protocal.ProductionReqProtocal.ProductionReq.class, com.pureland.common.protocal.ProductionReqProtocal.ProductionReq.Builder.class);
    }

    public static com.google.protobuf.Parser<ProductionReq> PARSER =
        new com.google.protobuf.AbstractParser<ProductionReq>() {
      public ProductionReq parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ProductionReq(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ProductionReq> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code ProductionReq.ProductionRequestType}
     */
    public enum ProductionRequestType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>Add = 1;</code>
       *
       * <pre>
       *添加
       * </pre>
       */
      Add(0, 1),
      /**
       * <code>Remove = 2;</code>
       *
       * <pre>
       *移除
       * </pre>
       */
      Remove(1, 2),
      /**
       * <code>Complete = 3;</code>
       *
       * <pre>
       *完成生产
       * </pre>
       */
      Complete(2, 3),
      /**
       * <code>CompleteImmediately = 4;</code>
       *
       * <pre>
       *立即完成
       * </pre>
       */
      CompleteImmediately(3, 4),
      ;

      /**
       * <code>Add = 1;</code>
       *
       * <pre>
       *添加
       * </pre>
       */
      public static final int Add_VALUE = 1;
      /**
       * <code>Remove = 2;</code>
       *
       * <pre>
       *移除
       * </pre>
       */
      public static final int Remove_VALUE = 2;
      /**
       * <code>Complete = 3;</code>
       *
       * <pre>
       *完成生产
       * </pre>
       */
      public static final int Complete_VALUE = 3;
      /**
       * <code>CompleteImmediately = 4;</code>
       *
       * <pre>
       *立即完成
       * </pre>
       */
      public static final int CompleteImmediately_VALUE = 4;


      public final int getNumber() { return value; }

      public static ProductionRequestType valueOf(int value) {
        switch (value) {
          case 1: return Add;
          case 2: return Remove;
          case 3: return Complete;
          case 4: return CompleteImmediately;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<ProductionRequestType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<ProductionRequestType>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<ProductionRequestType>() {
              public ProductionRequestType findValueByNumber(int number) {
                return ProductionRequestType.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.pureland.common.protocal.ProductionReqProtocal.ProductionReq.getDescriptor().getEnumTypes().get(0);
      }

      private static final ProductionRequestType[] VALUES = values();

      public static ProductionRequestType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private ProductionRequestType(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:ProductionReq.ProductionRequestType)
    }

    private int bitField0_;
    // required .ProductionReq.ProductionRequestType productionRequestType = 1;
    public static final int PRODUCTIONREQUESTTYPE_FIELD_NUMBER = 1;
    private com.pureland.common.protocal.ProductionReqProtocal.ProductionReq.ProductionRequestType productionRequestType_;
    /**
     * <code>required .ProductionReq.ProductionRequestType productionRequestType = 1;</code>
     *
     * <pre>
     *生产请求类型
     * </pre>
     */
    public boolean hasProductionRequestType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .ProductionReq.ProductionRequestType productionRequestType = 1;</code>
     *
     * <pre>
     *生产请求类型
     * </pre>
     */
    public com.pureland.common.protocal.ProductionReqProtocal.ProductionReq.ProductionRequestType getProductionRequestType() {
      return productionRequestType_;
    }

    // required int64 sid = 2;
    public static final int SID_FIELD_NUMBER = 2;
    private long sid_;
    /**
     * <code>required int64 sid = 2;</code>
     *
     * <pre>
     *生产的建筑id
     * </pre>
     */
    public boolean hasSid() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int64 sid = 2;</code>
     *
     * <pre>
     *生产的建筑id
     * </pre>
     */
    public long getSid() {
      return sid_;
    }

    // optional .ProductionItemVO productionItemVO = 3;
    public static final int PRODUCTIONITEMVO_FIELD_NUMBER = 3;
    private com.pureland.common.protocal.vo.ProductionItemVOProtocal.ProductionItemVO productionItemVO_;
    /**
     * <code>optional .ProductionItemVO productionItemVO = 3;</code>
     *
     * <pre>
     *生产的物品
     * </pre>
     */
    public boolean hasProductionItemVO() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .ProductionItemVO productionItemVO = 3;</code>
     *
     * <pre>
     *生产的物品
     * </pre>
     */
    public com.pureland.common.protocal.vo.ProductionItemVOProtocal.ProductionItemVO getProductionItemVO() {
      return productionItemVO_;
    }
    /**
     * <code>optional .ProductionItemVO productionItemVO = 3;</code>
     *
     * <pre>
     *生产的物品
     * </pre>
     */
    public com.pureland.common.protocal.vo.ProductionItemVOProtocal.ProductionItemVOOrBuilder getProductionItemVOOrBuilder() {
      return productionItemVO_;
    }

    // required int64 time = 4;
    public static final int TIME_FIELD_NUMBER = 4;
    private long time_;
    /**
     * <code>required int64 time = 4;</code>
     *
     * <pre>
     *当前的时间
     * </pre>
     */
    public boolean hasTime() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required int64 time = 4;</code>
     *
     * <pre>
     *当前的时间
     * </pre>
     */
    public long getTime() {
      return time_;
    }

    // optional int32 diamondCount = 5;
    public static final int DIAMONDCOUNT_FIELD_NUMBER = 5;
    private int diamondCount_;
    /**
     * <code>optional int32 diamondCount = 5;</code>
     *
     * <pre>
     *立即完成使用的钻石数量
     * </pre>
     */
    public boolean hasDiamondCount() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 diamondCount = 5;</code>
     *
     * <pre>
     *立即完成使用的钻石数量
     * </pre>
     */
    public int getDiamondCount() {
      return diamondCount_;
    }

    private void initFields() {
      productionRequestType_ = com.pureland.common.protocal.ProductionReqProtocal.ProductionReq.ProductionRequestType.Add;
      sid_ = 0L;
      productionItemVO_ = com.pureland.common.protocal.vo.ProductionItemVOProtocal.ProductionItemVO.getDefaultInstance();
      time_ = 0L;
      diamondCount_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasProductionRequestType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSid()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasProductionItemVO()) {
        if (!getProductionItemVO().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, productionRequestType_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, sid_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, productionItemVO_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt64(4, time_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, diamondCount_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, productionRequestType_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, sid_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, productionItemVO_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, time_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, diamondCount_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.pureland.common.protocal.ProductionReqProtocal.ProductionReq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.pureland.common.protocal.ProductionReqProtocal.ProductionReq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.pureland.common.protocal.ProductionReqProtocal.ProductionReq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.pureland.common.protocal.ProductionReqProtocal.ProductionReq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.pureland.common.protocal.ProductionReqProtocal.ProductionReq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.pureland.common.protocal.ProductionReqProtocal.ProductionReq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.pureland.common.protocal.ProductionReqProtocal.ProductionReq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.pureland.common.protocal.ProductionReqProtocal.ProductionReq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.pureland.common.protocal.ProductionReqProtocal.ProductionReq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.pureland.common.protocal.ProductionReqProtocal.ProductionReq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.pureland.common.protocal.ProductionReqProtocal.ProductionReq prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ProductionReq}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.pureland.common.protocal.ProductionReqProtocal.ProductionReqOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.pureland.common.protocal.ProductionReqProtocal.internal_static_ProductionReq_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.pureland.common.protocal.ProductionReqProtocal.internal_static_ProductionReq_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.pureland.common.protocal.ProductionReqProtocal.ProductionReq.class, com.pureland.common.protocal.ProductionReqProtocal.ProductionReq.Builder.class);
      }

      // Construct using com.pureland.common.protocal.ProductionReqProtocal.ProductionReq.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getProductionItemVOFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        productionRequestType_ = com.pureland.common.protocal.ProductionReqProtocal.ProductionReq.ProductionRequestType.Add;
        bitField0_ = (bitField0_ & ~0x00000001);
        sid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (productionItemVOBuilder_ == null) {
          productionItemVO_ = com.pureland.common.protocal.vo.ProductionItemVOProtocal.ProductionItemVO.getDefaultInstance();
        } else {
          productionItemVOBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        time_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        diamondCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.pureland.common.protocal.ProductionReqProtocal.internal_static_ProductionReq_descriptor;
      }

      public com.pureland.common.protocal.ProductionReqProtocal.ProductionReq getDefaultInstanceForType() {
        return com.pureland.common.protocal.ProductionReqProtocal.ProductionReq.getDefaultInstance();
      }

      public com.pureland.common.protocal.ProductionReqProtocal.ProductionReq build() {
        com.pureland.common.protocal.ProductionReqProtocal.ProductionReq result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.pureland.common.protocal.ProductionReqProtocal.ProductionReq buildPartial() {
        com.pureland.common.protocal.ProductionReqProtocal.ProductionReq result = new com.pureland.common.protocal.ProductionReqProtocal.ProductionReq(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.productionRequestType_ = productionRequestType_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.sid_ = sid_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (productionItemVOBuilder_ == null) {
          result.productionItemVO_ = productionItemVO_;
        } else {
          result.productionItemVO_ = productionItemVOBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.time_ = time_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.diamondCount_ = diamondCount_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.pureland.common.protocal.ProductionReqProtocal.ProductionReq) {
          return mergeFrom((com.pureland.common.protocal.ProductionReqProtocal.ProductionReq)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.pureland.common.protocal.ProductionReqProtocal.ProductionReq other) {
        if (other == com.pureland.common.protocal.ProductionReqProtocal.ProductionReq.getDefaultInstance()) return this;
        if (other.hasProductionRequestType()) {
          setProductionRequestType(other.getProductionRequestType());
        }
        if (other.hasSid()) {
          setSid(other.getSid());
        }
        if (other.hasProductionItemVO()) {
          mergeProductionItemVO(other.getProductionItemVO());
        }
        if (other.hasTime()) {
          setTime(other.getTime());
        }
        if (other.hasDiamondCount()) {
          setDiamondCount(other.getDiamondCount());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasProductionRequestType()) {
          
          return false;
        }
        if (!hasSid()) {
          
          return false;
        }
        if (!hasTime()) {
          
          return false;
        }
        if (hasProductionItemVO()) {
          if (!getProductionItemVO().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.pureland.common.protocal.ProductionReqProtocal.ProductionReq parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.pureland.common.protocal.ProductionReqProtocal.ProductionReq) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required .ProductionReq.ProductionRequestType productionRequestType = 1;
      private com.pureland.common.protocal.ProductionReqProtocal.ProductionReq.ProductionRequestType productionRequestType_ = com.pureland.common.protocal.ProductionReqProtocal.ProductionReq.ProductionRequestType.Add;
      /**
       * <code>required .ProductionReq.ProductionRequestType productionRequestType = 1;</code>
       *
       * <pre>
       *生产请求类型
       * </pre>
       */
      public boolean hasProductionRequestType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .ProductionReq.ProductionRequestType productionRequestType = 1;</code>
       *
       * <pre>
       *生产请求类型
       * </pre>
       */
      public com.pureland.common.protocal.ProductionReqProtocal.ProductionReq.ProductionRequestType getProductionRequestType() {
        return productionRequestType_;
      }
      /**
       * <code>required .ProductionReq.ProductionRequestType productionRequestType = 1;</code>
       *
       * <pre>
       *生产请求类型
       * </pre>
       */
      public Builder setProductionRequestType(com.pureland.common.protocal.ProductionReqProtocal.ProductionReq.ProductionRequestType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        productionRequestType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .ProductionReq.ProductionRequestType productionRequestType = 1;</code>
       *
       * <pre>
       *生产请求类型
       * </pre>
       */
      public Builder clearProductionRequestType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        productionRequestType_ = com.pureland.common.protocal.ProductionReqProtocal.ProductionReq.ProductionRequestType.Add;
        onChanged();
        return this;
      }

      // required int64 sid = 2;
      private long sid_ ;
      /**
       * <code>required int64 sid = 2;</code>
       *
       * <pre>
       *生产的建筑id
       * </pre>
       */
      public boolean hasSid() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int64 sid = 2;</code>
       *
       * <pre>
       *生产的建筑id
       * </pre>
       */
      public long getSid() {
        return sid_;
      }
      /**
       * <code>required int64 sid = 2;</code>
       *
       * <pre>
       *生产的建筑id
       * </pre>
       */
      public Builder setSid(long value) {
        bitField0_ |= 0x00000002;
        sid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 sid = 2;</code>
       *
       * <pre>
       *生产的建筑id
       * </pre>
       */
      public Builder clearSid() {
        bitField0_ = (bitField0_ & ~0x00000002);
        sid_ = 0L;
        onChanged();
        return this;
      }

      // optional .ProductionItemVO productionItemVO = 3;
      private com.pureland.common.protocal.vo.ProductionItemVOProtocal.ProductionItemVO productionItemVO_ = com.pureland.common.protocal.vo.ProductionItemVOProtocal.ProductionItemVO.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.pureland.common.protocal.vo.ProductionItemVOProtocal.ProductionItemVO, com.pureland.common.protocal.vo.ProductionItemVOProtocal.ProductionItemVO.Builder, com.pureland.common.protocal.vo.ProductionItemVOProtocal.ProductionItemVOOrBuilder> productionItemVOBuilder_;
      /**
       * <code>optional .ProductionItemVO productionItemVO = 3;</code>
       *
       * <pre>
       *生产的物品
       * </pre>
       */
      public boolean hasProductionItemVO() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .ProductionItemVO productionItemVO = 3;</code>
       *
       * <pre>
       *生产的物品
       * </pre>
       */
      public com.pureland.common.protocal.vo.ProductionItemVOProtocal.ProductionItemVO getProductionItemVO() {
        if (productionItemVOBuilder_ == null) {
          return productionItemVO_;
        } else {
          return productionItemVOBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .ProductionItemVO productionItemVO = 3;</code>
       *
       * <pre>
       *生产的物品
       * </pre>
       */
      public Builder setProductionItemVO(com.pureland.common.protocal.vo.ProductionItemVOProtocal.ProductionItemVO value) {
        if (productionItemVOBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          productionItemVO_ = value;
          onChanged();
        } else {
          productionItemVOBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .ProductionItemVO productionItemVO = 3;</code>
       *
       * <pre>
       *生产的物品
       * </pre>
       */
      public Builder setProductionItemVO(
          com.pureland.common.protocal.vo.ProductionItemVOProtocal.ProductionItemVO.Builder builderForValue) {
        if (productionItemVOBuilder_ == null) {
          productionItemVO_ = builderForValue.build();
          onChanged();
        } else {
          productionItemVOBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .ProductionItemVO productionItemVO = 3;</code>
       *
       * <pre>
       *生产的物品
       * </pre>
       */
      public Builder mergeProductionItemVO(com.pureland.common.protocal.vo.ProductionItemVOProtocal.ProductionItemVO value) {
        if (productionItemVOBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              productionItemVO_ != com.pureland.common.protocal.vo.ProductionItemVOProtocal.ProductionItemVO.getDefaultInstance()) {
            productionItemVO_ =
              com.pureland.common.protocal.vo.ProductionItemVOProtocal.ProductionItemVO.newBuilder(productionItemVO_).mergeFrom(value).buildPartial();
          } else {
            productionItemVO_ = value;
          }
          onChanged();
        } else {
          productionItemVOBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .ProductionItemVO productionItemVO = 3;</code>
       *
       * <pre>
       *生产的物品
       * </pre>
       */
      public Builder clearProductionItemVO() {
        if (productionItemVOBuilder_ == null) {
          productionItemVO_ = com.pureland.common.protocal.vo.ProductionItemVOProtocal.ProductionItemVO.getDefaultInstance();
          onChanged();
        } else {
          productionItemVOBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .ProductionItemVO productionItemVO = 3;</code>
       *
       * <pre>
       *生产的物品
       * </pre>
       */
      public com.pureland.common.protocal.vo.ProductionItemVOProtocal.ProductionItemVO.Builder getProductionItemVOBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getProductionItemVOFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .ProductionItemVO productionItemVO = 3;</code>
       *
       * <pre>
       *生产的物品
       * </pre>
       */
      public com.pureland.common.protocal.vo.ProductionItemVOProtocal.ProductionItemVOOrBuilder getProductionItemVOOrBuilder() {
        if (productionItemVOBuilder_ != null) {
          return productionItemVOBuilder_.getMessageOrBuilder();
        } else {
          return productionItemVO_;
        }
      }
      /**
       * <code>optional .ProductionItemVO productionItemVO = 3;</code>
       *
       * <pre>
       *生产的物品
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.pureland.common.protocal.vo.ProductionItemVOProtocal.ProductionItemVO, com.pureland.common.protocal.vo.ProductionItemVOProtocal.ProductionItemVO.Builder, com.pureland.common.protocal.vo.ProductionItemVOProtocal.ProductionItemVOOrBuilder> 
          getProductionItemVOFieldBuilder() {
        if (productionItemVOBuilder_ == null) {
          productionItemVOBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.pureland.common.protocal.vo.ProductionItemVOProtocal.ProductionItemVO, com.pureland.common.protocal.vo.ProductionItemVOProtocal.ProductionItemVO.Builder, com.pureland.common.protocal.vo.ProductionItemVOProtocal.ProductionItemVOOrBuilder>(
                  productionItemVO_,
                  getParentForChildren(),
                  isClean());
          productionItemVO_ = null;
        }
        return productionItemVOBuilder_;
      }

      // required int64 time = 4;
      private long time_ ;
      /**
       * <code>required int64 time = 4;</code>
       *
       * <pre>
       *当前的时间
       * </pre>
       */
      public boolean hasTime() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required int64 time = 4;</code>
       *
       * <pre>
       *当前的时间
       * </pre>
       */
      public long getTime() {
        return time_;
      }
      /**
       * <code>required int64 time = 4;</code>
       *
       * <pre>
       *当前的时间
       * </pre>
       */
      public Builder setTime(long value) {
        bitField0_ |= 0x00000008;
        time_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 time = 4;</code>
       *
       * <pre>
       *当前的时间
       * </pre>
       */
      public Builder clearTime() {
        bitField0_ = (bitField0_ & ~0x00000008);
        time_ = 0L;
        onChanged();
        return this;
      }

      // optional int32 diamondCount = 5;
      private int diamondCount_ ;
      /**
       * <code>optional int32 diamondCount = 5;</code>
       *
       * <pre>
       *立即完成使用的钻石数量
       * </pre>
       */
      public boolean hasDiamondCount() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 diamondCount = 5;</code>
       *
       * <pre>
       *立即完成使用的钻石数量
       * </pre>
       */
      public int getDiamondCount() {
        return diamondCount_;
      }
      /**
       * <code>optional int32 diamondCount = 5;</code>
       *
       * <pre>
       *立即完成使用的钻石数量
       * </pre>
       */
      public Builder setDiamondCount(int value) {
        bitField0_ |= 0x00000010;
        diamondCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 diamondCount = 5;</code>
       *
       * <pre>
       *立即完成使用的钻石数量
       * </pre>
       */
      public Builder clearDiamondCount() {
        bitField0_ = (bitField0_ & ~0x00000010);
        diamondCount_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:ProductionReq)
    }

    static {
      defaultInstance = new ProductionReq(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:ProductionReq)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_ProductionReq_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ProductionReq_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\023ProductionReq.proto\032\026ProductionItemVO." +
      "proto\"\207\002\n\rProductionReq\022C\n\025productionReq" +
      "uestType\030\001 \002(\0162$.ProductionReq.Productio" +
      "nRequestType\022\013\n\003sid\030\002 \002(\003\022+\n\020productionI" +
      "temVO\030\003 \001(\0132\021.ProductionItemVO\022\014\n\004time\030\004" +
      " \002(\003\022\024\n\014diamondCount\030\005 \001(\005\"S\n\025Production" +
      "RequestType\022\007\n\003Add\020\001\022\n\n\006Remove\020\002\022\014\n\010Comp" +
      "lete\020\003\022\027\n\023CompleteImmediately\020\004B5\n\034com.p" +
      "ureland.common.protocalB\025ProductionReqPr" +
      "otocal"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_ProductionReq_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_ProductionReq_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_ProductionReq_descriptor,
              new java.lang.String[] { "ProductionRequestType", "Sid", "ProductionItemVO", "Time", "DiamondCount", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.pureland.common.protocal.vo.ProductionItemVOProtocal.getDescriptor(),
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
